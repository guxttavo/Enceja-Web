// <auto-generated />
using System;
using Enceja.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Enceja.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250403001055_atualizacao-geral-2")]
    partial class atualizacaogeral2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Enceja.Domain.Entities.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("disciplina");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("IdAluno")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_aluno");

                    b.Property<int>("IdDisciplina")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_disciplina");

                    b.Property<int>("IdProfessor")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_professor");

                    b.Property<int>("ValorNota")
                        .HasColumnType("INTEGER")
                        .HasColumnName("valor_nota");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdDisciplina");

                    b.HasIndex("IdProfessor");

                    b.ToTable("nota");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Professor_Disciplina", b =>
                {
                    b.Property<int>("IdProfessor")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_professor");

                    b.Property<int>("IdDisciplina")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_disciplina");

                    b.HasKey("IdProfessor", "IdDisciplina");

                    b.HasIndex("IdDisciplina");

                    b.ToTable("professor_disciplina");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("turma");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("usuario");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Aluno", b =>
                {
                    b.HasBaseType("Enceja.Domain.Entities.Usuario");

                    b.Property<int>("IdTurma")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_turma");

                    b.Property<int>("Matricula")
                        .HasColumnType("INTEGER")
                        .HasColumnName("matricula");

                    b.HasIndex("IdTurma");

                    b.ToTable("aluno");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Professor", b =>
                {
                    b.HasBaseType("Enceja.Domain.Entities.Usuario");

                    b.ToTable("professor");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Nota", b =>
                {
                    b.HasOne("Enceja.Domain.Entities.Aluno", "Aluno")
                        .WithMany("Notas")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enceja.Domain.Entities.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enceja.Domain.Entities.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("IdProfessor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Professor_Disciplina", b =>
                {
                    b.HasOne("Enceja.Domain.Entities.Disciplina", "Disciplina")
                        .WithMany("Professores_Disciplinas")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enceja.Domain.Entities.Professor", "Professor")
                        .WithMany("Professores_Disciplinas")
                        .HasForeignKey("IdProfessor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Aluno", b =>
                {
                    b.HasOne("Enceja.Domain.Entities.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Enceja.Domain.Entities.Aluno", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Enceja.Domain.Entities.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Professor", b =>
                {
                    b.HasOne("Enceja.Domain.Entities.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Enceja.Domain.Entities.Professor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Disciplina", b =>
                {
                    b.Navigation("Professores_Disciplinas");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Turma", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("Enceja.Domain.Entities.Professor", b =>
                {
                    b.Navigation("Professores_Disciplinas");
                });
#pragma warning restore 612, 618
        }
    }
}
